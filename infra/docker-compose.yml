version: '3.8'

services:
  # CrewAI 應用程式
  crewai-app:
    build: 
      context: ..
      dockerfile: infra/Dockerfile
    container_name: crewai-agentic-app
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=development
      - DEBUG=true
      - CHROMA_HOST=chromadb
      - CHROMA_PORT=8000
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/crewai_db
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ../src:/app/src
      - ../storage:/app/storage
      - ../uploads:/app/uploads
      - ../logs:/app/logs
    depends_on:
      - chromadb
      - postgres
      - redis
    networks:
      - crewai-network
    restart: unless-stopped

  # ChromaDB 向量資料庫
  chromadb:
    image: chromadb/chroma:latest
    container_name: crewai-chromadb
    ports:
      - "8001:8000"
    environment:
      - CHROMA_SERVER_AUTH_CREDENTIALS_PROVIDER=chromadb.auth.token.TokenAuthCredentialsProvider
      - CHROMA_SERVER_AUTH_CREDENTIALS=test-token
      - CHROMA_SERVER_AUTH_PROVIDER=chromadb.auth.token.TokenAuthenticationServerProvider
    volumes:
      - chromadb_data:/chroma/chroma
    networks:
      - crewai-network
    restart: unless-stopped

  # PostgreSQL 資料庫
  postgres:
    image: postgres:15
    container_name: crewai-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=crewai_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - crewai-network
    restart: unless-stopped

  # Redis 快取
  redis:
    image: redis:7-alpine
    container_name: crewai-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - crewai-network
    restart: unless-stopped

  # Prometheus 監控
  prometheus:
    image: prom/prometheus:latest
    container_name: crewai-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./observability/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - crewai-network
    restart: unless-stopped

  # Grafana 視覺化
  grafana:
    image: grafana/grafana:latest
    container_name: crewai-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./observability/grafana/:/etc/grafana/provisioning/
    networks:
      - crewai-network
    restart: unless-stopped

networks:
  crewai-network:
    driver: bridge

volumes:
  chromadb_data:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data: 